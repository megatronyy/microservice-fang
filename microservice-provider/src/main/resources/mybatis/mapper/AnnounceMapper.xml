<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fang.cloud.mapper.AnnounceMapper">
  <resultMap id="BaseResultMap" type="com.fang.cloud.entity.Announce">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="Context" jdbcType="NVARCHAR" property="context" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="IsRead" jdbcType="SMALLINT" property="isread" />
  </resultMap>
  <sql id="Base_Column_List">
    Id, UserId, Context, CreateTime, IsRead
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from ShopHouse.dbo.Announce
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <select id="getAnnounceListByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select top 5
    <include refid="Base_Column_List" />
    from ShopHouse.dbo.Announce
    where UserId = #{userId,jdbcType=INTEGER}
    order by id desc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ShopHouse..Announce
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.fang.cloud.entity.Announce">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SQL_Server
    </selectKey>
    insert into ShopHouse.dbo.Announce (UserId, Context, CreateTime,
      IsRead)
    values (#{userid,jdbcType=INTEGER}, #{context,jdbcType=NVARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{isread,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.fang.cloud.entity.Announce">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SQL_Server
    </selectKey>
    insert into ShopHouse.dbo.Announce
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        UserId,
      </if>
      <if test="context != null">
        Context,
      </if>
      <if test="createtime != null">
        CreateTime,
      </if>
      <if test="isread != null">
        IsRead,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="context != null">
        #{context,jdbcType=NVARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isread != null">
        #{isread,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.fang.cloud.entity.Announce">
    update ShopHouse.dbo.Announce
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="context != null">
        Context = #{context,jdbcType=NVARCHAR},
      </if>
      <if test="createtime != null">
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isread != null">
        IsRead = #{isread,jdbcType=SMALLINT},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fang.cloud.entity.Announce">
    update ShopHouse.dbo.Announce
    set UserId = #{userid,jdbcType=INTEGER},
      Context = #{context,jdbcType=NVARCHAR},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      IsRead = #{isread,jdbcType=SMALLINT}
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="com.fang.cloud.entity.Announce">
    <id column="Id" jdbcType="INTEGER" property="id" />
    <result column="UserId" jdbcType="INTEGER" property="userid" />
    <result column="Context" jdbcType="NVARCHAR" property="context" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="IsRead" jdbcType="SMALLINT" property="isread" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Id, UserId, Context, CreateTime, IsRead
  </sql>
  <select id="selectByExample" parameterType="com.fang.cloud.entity.AnnounceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ShopHouse..Announce
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ShopHouse..Announce
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ShopHouse..Announce
    where Id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fang.cloud.entity.AnnounceExample">
    delete from ShopHouse..Announce
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fang.cloud.entity.Announce">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SQL_Server
    </selectKey>
    insert into ShopHouse..Announce (UserId, Context, CreateTime, 
      IsRead)
    values (#{userid,jdbcType=INTEGER}, #{context,jdbcType=NVARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{isread,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.fang.cloud.entity.Announce">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SQL_Server
    </selectKey>
    insert into ShopHouse..Announce
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        UserId,
      </if>
      <if test="context != null">
        Context,
      </if>
      <if test="createtime != null">
        CreateTime,
      </if>
      <if test="isread != null">
        IsRead,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="context != null">
        #{context,jdbcType=NVARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isread != null">
        #{isread,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fang.cloud.entity.AnnounceExample" resultType="java.lang.Long">
    select count(*) from ShopHouse..Announce
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ShopHouse..Announce
    <set>
      <if test="record.id != null">
        Id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        UserId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.context != null">
        Context = #{record.context,jdbcType=NVARCHAR},
      </if>
      <if test="record.createtime != null">
        CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isread != null">
        IsRead = #{record.isread,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ShopHouse..Announce
    set Id = #{record.id,jdbcType=INTEGER},
      UserId = #{record.userid,jdbcType=INTEGER},
      Context = #{record.context,jdbcType=NVARCHAR},
      CreateTime = #{record.createtime,jdbcType=TIMESTAMP},
      IsRead = #{record.isread,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fang.cloud.entity.Announce">
    update ShopHouse..Announce
    <set>
      <if test="userid != null">
        UserId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="context != null">
        Context = #{context,jdbcType=NVARCHAR},
      </if>
      <if test="createtime != null">
        CreateTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="isread != null">
        IsRead = #{isread,jdbcType=SMALLINT},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fang.cloud.entity.Announce">
    update ShopHouse..Announce
    set UserId = #{userid,jdbcType=INTEGER},
      Context = #{context,jdbcType=NVARCHAR},
      CreateTime = #{createtime,jdbcType=TIMESTAMP},
      IsRead = #{isread,jdbcType=SMALLINT}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>